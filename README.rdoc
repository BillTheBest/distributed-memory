= Distributed Memory
* === Project for Security in Computing class
  University of Pisa - Academic Year 2010-2011

* === Unix Project for Operating Systems And Distributed Programming class
  University of Pisa - Academic Year 2009-2010

A simplified distributed memory system for POSIX compliant systems
written in C++.

The system involves a server application (*dmserver*) that offers a certain
amount of memory to the clients, and a static library to access this
memory (*libdm*).
Memory is arranged in blocks uniquely identified by a number. The number
of blocks, servers and their mapping are managed by a configuration
file.
Of course, server and client can run on different nodes on the
network, and use JSON messages over TCP/IP for communication.

The system also provides client authentication and data encryption
with AES-256. Client authenticate to server with a
shared passphrase and a session key is generated.
Identity of each server is ensured by a public RSA key.


== Getting started
Just type
 $ make
to compile all binaries. If everything goes fine, you should see two
files in bin folder, <b>dmserver</b> and <b>libdm.a</b>.

After creating a RSA key pair for each server editing the configuration
file (see test/reader/dmconfig.yml for an example), then launch the
server with
 $ dmserver -i ip:port
where ip:port is the server id as specified in the configuration file.


== Usage
To use the library in your C++ application include the header
 #include <dm/client.h>
and add the static library to the compiler options, eg:
 g++ app.cpp -Lbin -ldm -o app
For a complete interface usage see the documentation.


== Testing
 $ make -C test/reader run
to perform the overall test (as required by specifications), and
 $ make -C test/unit run
to perform the unit tests.

Tested on <b>Ubuntu 11.10 with kernel 3.0.0-12</b> and <b>Mac OS X
10.6.7</b>


== Documentation
Documentation is created with Doxygen. Type
 $ make documentation
to compile html and latex pages in doc/doxygen

More info can be found in (all in Italian):
* doc/progetto-unix2010.pdf: project specifications
* doc/progetto-sicurezza2011.pdf: specifications about security part
* doc/report-sicurezza2011.pdf: short report about security part


== Requirements
* GCC with C stardard library
* pthread library
* OpenSSL library
* Doxygen for documentation


== Dependencies
Internal libraries used in this project:
* {yaml-cpp v0.2.7}[http://code.google.com/p/yaml-cpp/]
  for configuration file and communication protocol
* {Google Test v1.5.0}[http://code.google.com/p/googletest/]
  for unit testing
* {base64 decode}[https://github.com/flow3r/base-encodings/]
  for decoding of binary data (still missing in yaml-cpp)


== Notes on this repository
* branch _master_ contains the original project developed for
  Distributed Programming class
* branch _crypto_ contains the enhancements for Security class


== License
Copyright (c) 2011 Francesco Disperati
Released under GNU GPLv3 or later (http://www.gnu.org/licenses/gpl-3.0.txt)
