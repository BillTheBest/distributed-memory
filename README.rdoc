= Distributed Memory
=== Unix Project for the course of Operating Systems And Distributed Programming
=== University of Pisa - Accademic Year 2009-2010

A simplified distributed memory system for POSIX compliant systems
written in C++. 

The system involves a server application (*dmserver*) that offers a certain
amount of memory to the clients, and a static library to access this
memory (*libdm*).
Memory is arranged in blocks uniquely identified by a number. The number
of blocks, servers and their mapping are managed by a configuration
file.
Of course, server and client can run on different nodes on the
network, and use JSON messages over TCP/IP for communication.

See doc/progetto-unix2010.pdf for full specifications (in Italian).


== Getting started
Just type
 $ make
to compile all binaries. If everything goes fine, you should see two
files in bin folder, <b>dmserver</b> and <b>libdm.a</b>.

After creating a configuration file (see test/reader/dmconfig.yml for
an example), launch the server with
 $ dmserver -i ip:port
where ip:port is the server id as specified in the configuration file.


== Usage
To use the library in your C++ application include the header
 #include <dm/client.h>
and add the static library to the compiler options, eg:
 g++ app.cpp -Lbin -ldm -o app
For a complete interface usage see the documentation.


== Testing
 $ make -C test/reader run
to perform the overall test (as required by specifications), and
 $ make -C test/unit run
to perform the unit tests.

Tested on <b>Ubuntu 10.10 with kernel 2.6.35-28</b> and <b>Mac OS X
10.6.7</b>


== Documentation
Documentation is created using Doxygen. Type
 $ make documentation
to compile html and latex pages in doc/doxygen



== Requirements
* GCC with C stardard library
* pthread library
* Doxygen for documentation


== Dependencies
External libraries used in this project:
* {yaml-cpp v0.2.6}[http://code.google.com/p/yaml-cpp/]
  for configuration file and communication protocol
* {Google Test v1.5.0}[http://code.google.com/p/googletest/]
  for unit testing
* {base64 decode}[https://github.com/flow3r/base-encodings/]
  for decoding of binary data (still missing in yaml-cpp)


== License
Copyright (c) 2011 Francesco Disperati
Released under GNU GPLv3 or later (http://www.gnu.org/licenses/gpl-3.0.txt)
